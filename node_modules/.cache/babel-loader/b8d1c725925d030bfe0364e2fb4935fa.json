{"ast":null,"code":"import _defineProperty from\"/workspace/bewd_react_fetchapi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/workspace/bewd_react_fetchapi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/workspace/bewd_react_fetchapi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/workspace/bewd_react_fetchapi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/workspace/bewd_react_fetchapi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/workspace/bewd_react_fetchapi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/workspace/bewd_react_fetchapi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';//import one User Card component\nimport UserCard from'./Components/UserCard';//import filter components\nimport InputLabels from'./Components/InputLabels';import RadioBtn from'./Components/RadioBtn';import DropDown from'./Components/DropDown';import Toggle from'./Components/Toggle';//Axios is a lightweight HTTP client based on the $http service within Angular.js\n//Axios provides support for request and response interceptors, transformers and auto-conversion to JSON\n// Use \"npm install axios\" command to install\nimport axios from'axios';//Define the UserList component\nvar UserList=/*#__PURE__*/function(_React$Component){_inherits(UserList,_React$Component);var _super=_createSuper(UserList);function UserList(){var _this;_classCallCheck(this,UserList);_this=_super.call(this);//set the state keys and values\n_this.state={users:[],genderSelect:'all',natSelect:'all',natValues:[],sort:'no',searchInput:'',contrastMode:false};//bind the \"this\" keyword to use for event\n_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.handleClick=_this.handleClick.bind(_assertThisInitialized(_this));return _this;}_createClass(UserList,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;//get the users from the API and store their values in the state\n//you can change the API's URL result value to display more users\naxios.get('https://randomuser.me/api/?results=45').then(function(response){//map through the users data results in the API\nvar users=response.data.results.map(function(user){return{//return the API values and set to the state values\nname:user.name.first,image:user.picture.large,gender:user.gender,nationality:user.nat,location:user.location.timezone.description,phone:user.phone};});//change the state of the users\n_this2.setState({users:users});// sort and remove duplicate nationalities\n// store the result in state to be used for the dropdown menu options\nvar nat=users.map(function(user){return user.nationality;});var deduped=_toConsumableArray(new Set(nat));deduped.sort();_this2.setState({natValues:deduped});}).catch(function(error){console.log(error);});}},{key:\"handleChange\",value:function handleChange(event){//handle <select> UI elements\nvar target=event.target;var value=target.type==='checkbox'?target.checked:target.value;var name=target.name;this.setState(_defineProperty({},name,value));}},{key:\"handleClick\",value:function handleClick(event){// handle the toggle <button>\nvar name=event.target.name;this.setState(function(prevState){return _defineProperty({},name,!prevState[name]);});}},{key:\"render\",value:function render(){var _this3=this;// if results are to be sorted, create a copy of the user data and sort it,\n// otherwise just use the original data from the state\nvar data=this.state.sort==='no'?this.state.users:[].concat(this.state.users).sort(function(a,b){if(a.name<b.name)return-1;if(a.name>b.name)return 1;return 0;});/*\n        generate a list of users for each unique user card\n        each of the user cards needs a unique key\n        check the input state and skip the cards not matching the required nationality/gender/search text \n        */var userList=data.map(function(user){var genderMatch=_this3.state.genderSelect===user.gender||_this3.state.genderSelect==='all';var natMatch=_this3.state.natSelect===user.nationality||_this3.state.natSelect==='all';var nameMatch=user.name.startsWith(_this3.state.searchInput);return genderMatch&&natMatch&&nameMatch?/*#__PURE__*/React.createElement(UserCard,{name:user.name,image:user.image,nat:user.nationality,key:user.name+user.image,gender:user.gender,location:user.location,phone:user.phone}):null;});//console.log(userList);\nreturn/*#__PURE__*/ //add a containing element for all nested elements\nReact.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"section\",{className:\"is-fluid\"},/*#__PURE__*/React.createElement(\"nav\",{className:\"navbar has-background-primary\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"navbar-item title is-1 has-text-white\",style:{fontFamily:'Oswald, sans-serif'}},\"List of Users\")),/*#__PURE__*/React.createElement(\"div\",{className:this.state.contrastMode?\"columns has-background-black\":\"columns\",style:{borderRadius:0,padding:\"0px 40px\"}},/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"column\",style:{padding:\"50px\"}},/*#__PURE__*/React.createElement(DropDown,{options:['all','male','female'],name:\"genderSelect\",handleChange:this.handleChange,label:\"Filter by gender\",selected:this.state.genderSelect}),/*#__PURE__*/React.createElement(DropDown,{options:['all'].concat(this.state.natValues),name:\"natSelect\",handleChange:this.handleChange,label:\"Filter by nationality\",selected:this.state.natSelect}),/*#__PURE__*/React.createElement(RadioBtn,{handleChange:this.handleChange,checked:this.state.sort}),/*#__PURE__*/React.createElement(InputLabels,{name:\"searchInput\",label:\"Search by name\",value:this.state.searchInput,handleChange:this.handleChange,placeholder:\"e.g. Stewart\"}),/*#__PURE__*/React.createElement(Toggle,{name:\"contrastMode\",handleClick:this.handleClick,toggle:this.state.contrastMode,labelOn:\"Switch to White mode\",labelOff:\"Switch to Black mode\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"column is-four-fifths\"},/*#__PURE__*/React.createElement(\"div\",{className:\"columns is-multiline\",style:{paddingBottom:\"50px\",paddingTop:\"50px\"}},userList)))),/*#__PURE__*/React.createElement(\"footer\",{className:\"footer has-background-primary\"},/*#__PURE__*/React.createElement(\"div\",{className:\"content has-text-centered\"},/*#__PURE__*/React.createElement(\"p\",{className:\"has-text-white-bis\"},/*#__PURE__*/React.createElement(\"strong\",null,\"Random User API\"),\" styled with Bulma.\"))));}}]);return UserList;}(React.Component);export default UserList;","map":{"version":3,"sources":["/workspace/bewd_react_fetchapi/src/UserList.js"],"names":["React","UserCard","InputLabels","RadioBtn","DropDown","Toggle","axios","UserList","state","users","genderSelect","natSelect","natValues","sort","searchInput","contrastMode","handleChange","bind","handleClick","get","then","response","data","results","map","user","name","first","image","picture","large","gender","nationality","nat","location","timezone","description","phone","setState","deduped","Set","catch","error","console","log","event","target","value","type","checked","prevState","concat","a","b","userList","genderMatch","natMatch","nameMatch","startsWith","fontFamily","borderRadius","padding","paddingBottom","paddingTop","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n//import one User Card component\nimport UserCard from './Components/UserCard';\n//import filter components\nimport InputLabels from './Components/InputLabels';\nimport RadioBtn from './Components/RadioBtn';\nimport DropDown from './Components/DropDown';\nimport Toggle from './Components/Toggle';\n//Axios is a lightweight HTTP client based on the $http service within Angular.js\n//Axios provides support for request and response interceptors, transformers and auto-conversion to JSON\n// Use \"npm install axios\" command to install\nimport axios from 'axios';\n\n//Define the UserList component\nclass UserList extends React.Component {\n    constructor() {\n        super();\n        //set the state keys and values\n        this.state = {\n            users: [],\n            genderSelect: 'all',\n            natSelect: 'all',\n            natValues: [],\n            sort: 'no',\n            searchInput: '',\n            contrastMode: false\n        };\n        //bind the \"this\" keyword to use for event\n        this.handleChange = this.handleChange.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    componentDidMount() {\n        //get the users from the API and store their values in the state\n        //you can change the API's URL result value to display more users\n        axios.get('https://randomuser.me/api/?results=45')\n            .then(response => {\n                //map through the users data results in the API\n                const users = response.data.results.map(user => {\n                    return {\n                        //return the API values and set to the state values\n                        name: user.name.first,\n                        image: user.picture.large,\n                        gender: user.gender,\n                        nationality: user.nat,\n                        location: user.location.timezone.description,\n                        phone: user.phone,\n                    };\n                });\n                //change the state of the users\n                this.setState({ users: users });\n\n                // sort and remove duplicate nationalities\n                // store the result in state to be used for the dropdown menu options\n                const nat = users.map(user => {\n                    return user.nationality;\n                });\n                const deduped = [...new Set(nat)];\n                deduped.sort();\n                this.setState({ natValues: deduped });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    handleChange(event) {\n        //handle <select> UI elements\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleClick(event) {\n        // handle the toggle <button>\n        const name = event.target.name;\n        this.setState(prevState => ({\n            [name]: !prevState[name]\n        }));\n    }\n\n    render() {\n        // if results are to be sorted, create a copy of the user data and sort it,\n        // otherwise just use the original data from the state\n        const data = this.state.sort === 'no' ? this.state.users : [].concat(this.state.users)\n            .sort((a, b) => {\n                if (a.name < b.name) return -1;\n                if (a.name > b.name) return 1;\n                return 0;\n            });\n        /*\n        generate a list of users for each unique user card\n        each of the user cards needs a unique key\n        check the input state and skip the cards not matching the required nationality/gender/search text \n        */\n        let userList = data.map(user => {\n            const genderMatch = (this.state.genderSelect === user.gender || this.state.genderSelect === 'all');\n            const natMatch = (this.state.natSelect === user.nationality || this.state.natSelect === 'all');\n            const nameMatch = user.name.startsWith(this.state.searchInput);\n            return (genderMatch && natMatch && nameMatch) ? (\n                <UserCard name={user.name} image={user.image} nat={user.nationality} key={user.name + user.image} gender={user.gender} location={user.location} phone={user.phone}/>\n            ) : null;\n        });\n//console.log(userList);\n        return (\n            //add a containing element for all nested elements\n            <div>\n                <section className=\"is-fluid\">\n                    <nav className=\"navbar has-background-primary\">\n                        <h1 className=\"navbar-item title is-1 has-text-white\" style={{fontFamily: 'Oswald, sans-serif'}}>List of Users</h1>\n                    </nav>\n                    <div className={this.state.contrastMode ? \"columns has-background-black\" : \"columns\"} style={{ borderRadius: 0, padding: \"0px 40px\" }}>\n                        <hr />\n                        {/*FILTER INPUTS*/}\n                        <div className=\"column\" style={{ padding: \"50px\" }}>\n                            <DropDown options={['all', 'male', 'female']} name=\"genderSelect\" handleChange={this.handleChange} label=\"Filter by gender\" selected={this.state.genderSelect} />\n                            <DropDown options={['all'].concat(this.state.natValues)} name=\"natSelect\" handleChange={this.handleChange} label=\"Filter by nationality\" selected={this.state.natSelect} />\n                            <RadioBtn handleChange={this.handleChange} checked={this.state.sort} />\n                            <InputLabels name=\"searchInput\" label=\"Search by name\" value={this.state.searchInput} handleChange={this.handleChange} placeholder={\"e.g. Stewart\"} />\n                            <Toggle name=\"contrastMode\" handleClick={this.handleClick} toggle={this.state.contrastMode} labelOn=\"Switch to White mode\" labelOff=\"Switch to Black mode\" />\n                        </div>\n                        {/*USER LIST*/}\n                        <div className=\"column is-four-fifths\">\n                            <div className=\"columns is-multiline\" style={{ paddingBottom: \"50px\", paddingTop: \"50px\" }}>\n                                {/*Draw the userList defined in the render method above*/}\n                                {userList}\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                <footer className=\"footer has-background-primary\">\n                    <div className=\"content has-text-centered\">\n                        <p className=\"has-text-white-bis\"><strong>Random User API</strong> styled with Bulma.</p>\n                    </div>\n                </footer>\n            </div>\n        );\n    }\n}\n\nexport default UserList;"]},"metadata":{},"sourceType":"module"}